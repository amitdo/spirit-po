sudo: false
language: cpp
compiler:
  - clang

matrix:
  include:
    - env: COMPILER=g++-4.9 BOOST_VER_NUM=48
      addons: &gcc49
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - gettext
            - gdb
            - cmake-data
            - cmake
            - g++-4.9
    - env: COMPILER=g++-4.9 BOOST_VER_NUM=51
      addons: *gcc49
    - env: COMPILER=g++-4.9 BOOST_VER_NUM=54
      addons: *gcc49
    - env: COMPILER=g++-4.9 BOOST_VER_NUM=57
      addons: *gcc49
    - env: COMPILER=g++-4.9 BOOST_VER_NUM=59
      addons: *gcc49

    - env: COMPILER=clang++-3.5 BOOST_VER_NUM=48
      addons: &clang35
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
            - llvm-toolchain-precise-3.5
          packages:
            - gettext
            - gdb
            - cmake-data
            - cmake
            - clang-3.5
    - env: COMPILER=clang++-3.5 BOOST_VER_NUM=51
      addons: *clang35
    - env: COMPILER=clang++-3.5 BOOST_VER_NUM=54
      addons: *clang35
    - env: COMPILER=clang++-3.5 BOOST_VER_NUM=57
      addons: *clang35
    - env: COMPILER=clang++-3.5 BOOST_VER_NUM=59
      addons: *clang35

    - env: COMPILER=clang++-3.7 BOOST_VER_NUM=48
      addons: &clang37
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
            - llvm-toolchain-precise-3.7
          packages:
            - gettext
            - gdb
            - cmake-data
            - cmake
            - clang-3.7
    - env: COMPILER=clang++-3.7 BOOST_VER_NUM=51
      addons: *clang37
    - env: COMPILER=clang++-3.7 BOOST_VER_NUM=54
      addons: *clang37
    - env: COMPILER=clang++-3.7 BOOST_VER_NUM=57
      addons: *clang37
    - env: COMPILER=clang++-3.7 BOOST_VER_NUM=59
      addons: *clang37

# The 'global' matrix always generates at least one entry, we use that for the default ubuntu precise clang
env: COMPILER=clang++ BOOST_VER_NUM=48
addons: *gcc49


before_install:
# set CXX variable
  - export CXX=${COMPILER}
  - echo ${CXX}
install:
# Install Boost headers
  - pwd
  - ls
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  - echo ${BOOST_VER_NUM}
  - BOOST_DOT_VER_STRING=1.${BOOST_VER_NUM}.0
  - BOOST_UNDERSCORE_VER_STRING=1_${BOOST_VER_NUM}_0

  - BOOST_SUBDIR_NAME=boost_${BOOST_UNDERSCORE_VER_STRING}
  - BOOST_TAR_NAME=${BOOST_SUBDIR_NAME}.tar.gz

  - BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_DOT_VER_STRING}/${BOOST_TAR_NAME}"
  - travis_retry wget ${BOOST_URL}
  - tar -xzf ${BOOST_TAR_NAME}

  - BOOST_DIR_NAME=${DEPS_DIR}/${BOOST_SUBDIR_NAME}

  - pwd
  - ls
  - cd ..

  - pwd
  - ls
  - if [[   -d ${BOOST_DIR_NAME} ]]; then echo "Have boost"; else echo "No boost (?)"; fi
  - if [[   -f ${BOOST_DIR_NAME}/boost/version.hpp ]]; then echo "Have boost version hpp"; else echo "No boost version hpp (?)"; fi

  - CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR_NAME} -DBoost_DEBUG=on"
script:
  - $CXX --version
  - pwd
  - ls

  - echo "Unit Tests"
  - cd test && ./test.sh BOOST_DIR=${BOOST_DIR_NAME}

  - echo "Libintl Validation Tests"
  - cd ../test_libintl && ./test.sh ${CMAKE_OPTIONS}

  - echo "SPIRIT_PO_NOEXCEPT build"
  - ./test.sh -DNOEXCEPT=1 ${CMAKE_OPTIONS}

  - echo "SPIRIT_PO_DEBUG build"
  - ./test.sh -DDEBUG=1 ${CMAKE_OPTIONS}

  - echo "SPIRIT_PO_NOEXCEPT + SPIRIT_PO_DEBUG build"
  - ./test.sh -DNOEXCEPT=1 -DDEBUG=1 ${CMAKE_OPTIONS}
